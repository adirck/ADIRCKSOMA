ALTER PROCEDURE [dbo].[PROC_SS_LOJA_VENDA_TROCA_ORIGEM] (@prChaveNFe varchar(44))
AS
BEGIN
/*Tiago Carvalho (SS) - 30/09/2015 -  #SS03# -  Corrigido para encontrar o ticket da tabela exclusiva quando não tiver chave_nfe*/
/*Tiago Carvalho (SS) - 24/08/2015 -  #SS02# -  Corrigido para não entrar em recursividade com a trigger lxu_loja_nota_fiscal*/
/*Bruno Silva (ss) - 31/07/2015 -  #SS01# -  ALTERADO PARA NÃO BUSCAR NFC-E QUANDO A LOJA NÃO EFETUAR EMISSÃO*/
/*Bruno Silva (SS) - 31/07/2015 - ADICIONADA A CONDIÇÃO PARA BUSCAR APENAS NOTAS AUTORIZADAS*/
/*Tiago Carvalho (SS) - ALTERADO PARA SOMENTE DA TABELA EXCLUSIVA SE NÃO ENCONTRAR NAS TABELAS NORMAL*/
/*Tiago Carvalho (SS) - ALTERADO PARA SOMENTE PEGAR VENDAS COM A DATA MENOR OU IGUAL A EMISSAO DA NOTA FISCAL*/
DECLARE @CODIGO_FILIAL VARCHAR(6), 
		@TICKET VARCHAR(8), 
		@DATA_VENDA DATETIME, 
		@ITEM CHAR(4), 
		@PRODUTO CHAR(12), 
		@COR_PRODUTO CHAR(10),
		@TAMANHO INT,
		@CODIGO_CLIENTE varchar(14),
		@UF CHAR(2),		
		@ItemAtualizado bit,
		@NotaItemAtualizado bit,
		@Obs varchar(max),
		@ObsTexto varchar(max),
		@Emissor_nfce bit

set nocount on 		

IF OBJECT_ID('TEMPDB..#TROCA_SEM_ORIGEM') > 0 
	DROP TABLE #TROCA_SEM_ORIGEM

/*seleciona todos os tickes sem origem*/	
SELECT A.OBS, A.CODIGO_CLIENTE,V.FILIAL, CL.UF, D.CODIGO_FILIAL, D.TICKET, D.DATA_VENDA, D.ITEM, D.PRODUTO, D.COR_PRODUTO,D.TAMANHO 
	INTO #TROCA_SEM_ORIGEM
	FROM LOJA_NOTA_FISCAL A(nolock)
	INNER JOIN LOJAS_VAREJO V(nolock)
		ON V.CODIGO_FILIAL = A.CODIGO_FILIAL 
	INNER JOIN CADASTRO_CLI_FOR CL(nolock)
		ON CL.NOME_CLIFOR = V.FILIAL
	INNER JOIN LOJA_VENDA_PGTO B(nolock)
		ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.NF_NUMERO = B.NUMERO_FISCAL_TROCA AND A.SERIE_NF = B.SERIE_NF_ENTRADA 
	INNER JOIN LOJA_VENDA C(nolock)
		ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
	INNER JOIN LOJA_VENDA_TROCA D(nolock)
		ON D.CODIGO_FILIAL = C.CODIGO_FILIAL AND D.TICKET = C.TICKET AND D.DATA_VENDA = C.DATA_VENDA 
	LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
		ON E.CODIGO_FILIAL = D.CODIGO_FILIAL AND E.TICKET = D.TICKET AND E.DATA_VENDA = D.DATA_VENDA AND E.ITEM =D.ITEM 
	WHERE A.CHAVE_NFE = @prChaveNFe
		and E.CODIGO_FILIAL IS NULL
	order by D.CODIGO_FILIAL, D.TICKET, D.DATA_VENDA, D.ITEM, D.PRODUTO, D.COR_PRODUTO,D.TAMANHO 

select @NotaItemAtualizado = 0 

while exists (select top 1 TICKET from #TROCA_SEM_ORIGEM)
begin
	begin try 
		select @ItemAtualizado = 0 
		select top 1 @CODIGO_FILIAL = CODIGO_FILIAL, @TICKET= TICKET, @DATA_VENDA = DATA_VENDA, @ITEM = ITEM, @PRODUTO = PRODUTO, @COR_PRODUTO = COR_PRODUTO,	@TAMANHO = TAMANHO, @CODIGO_CLIENTE = CODIGO_CLIENTE
		from #TROCA_SEM_ORIGEM order by CODIGO_FILIAL, TICKET, DATA_VENDA, ITEM, PRODUTO, COR_PRODUTO,TAMANHO,CODIGO_CLIENTE 
		
		delete from #TROCA_SEM_ORIGEM where CODIGO_CLIENTE = @CODIGO_CLIENTE and CODIGO_FILIAL = @CODIGO_FILIAL and TICKET = @TICKET and DATA_VENDA = @DATA_VENDA and ITEM = @ITEM and PRODUTO =@PRODUTO and COR_PRODUTO = @COR_PRODUTO and TAMANHO  = @TAMANHO 

/****************************************************** Procura A Nivel de Cliente ***********************************************************/		
		/*Procura primeiro a nivel de filial cliente produto cor  tamanho */
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
						AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO 
						AND A.TAMANHO			= @TAMANHO
						AND A.DATA_VENDA		<=@DATA_VENDA  ) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
					AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO 
					AND A.TAMANHO			= @TAMANHO 
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
		end
		
		/*A nivel de filial, cliente , produto, cor */
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
						AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO 
						AND A.DATA_VENDA		<=@DATA_VENDA
							 ) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
					AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO 
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
					
		end
		
		/*A nivel de filial, cliente , produto */
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
						AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
						AND A.PRODUTO			= @PRODUTO 
						AND A.DATA_VENDA		<=@DATA_VENDA
						
					 ) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
					AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
					AND A.PRODUTO			= @PRODUTO 
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
					
		end
		
/************************************************* retirado o nivel de filial e reiniciado a busca a nivel de cliente ***************************************************/		
		/*Procura primeiro a nivel de produto cor e tamanho e filial*/
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO 
						AND A.TAMANHO			= @TAMANHO
						AND A.DATA_VENDA		<=@DATA_VENDA  ) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE= 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO 
					AND A.TAMANHO			= @TAMANHO 
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
		end
		
		/*Procura primeiro a nivel de produto cor e tamanho*/
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO
						AND A.DATA_VENDA		<=@DATA_VENDA) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA 
		end
		
		/*Procura primeiro a nivel de produto cor*/
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
						AND A.PRODUTO			= @PRODUTO 
						AND A.DATA_VENDA		<=@DATA_VENDA	 ) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND B.CODIGO_CLIENTE	= @CODIGO_CLIENTE 
					AND A.PRODUTO			= @PRODUTO
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
		end

/************************************************* retirado o nivel de Cliente e Colocado o nivel de Filial ***************************************************/				
		/*Procura primeiro a nivel de produto cor e tamanho e filial*/
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO 
						AND A.TAMANHO			= @TAMANHO 
						AND A.DATA_VENDA		<=@DATA_VENDA ) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO 
					AND A.TAMANHO			= @TAMANHO
					AND A.DATA_VENDA		<=@DATA_VENDA 
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
		end
		
		/*Procura primeiro a nivel de produto cor e tamanho*/
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO 
						AND A.DATA_VENDA		<=@DATA_VENDA
							 ) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO 
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
					
		end
		
		/*Procura primeiro a nivel de produto cor*/
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
						AND A.PRODUTO			= @PRODUTO 
						AND A.DATA_VENDA		<=@DATA_VENDA
						
					 ) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.CODIGO_FILIAL		= @CODIGO_FILIAL 
					AND A.PRODUTO			= @PRODUTO 
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
		end

/************************************************* Retirado o nivel de filial e cliente e colocado o nivel de UF da Troca produto cor tamanho ***************************************************/				
		/*Procura primeiro a nivel de produto cor e tamanho e filial*/
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					INNER JOIN LOJAS_VAREJO V(nolock)
						ON V.CODIGO_FILIAL = A.CODIGO_FILIAL 
					INNER JOIN CADASTRO_CLI_FOR CL(nolock)
						ON CL.NOME_CLIFOR = V.FILIAL
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO 
						AND A.TAMANHO			= @TAMANHO 
						AND CL.UF				= @UF
						AND A.DATA_VENDA		<=@DATA_VENDA  ) 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				INNER JOIN LOJAS_VAREJO V(nolock)
					ON V.CODIGO_FILIAL = A.CODIGO_FILIAL 
				INNER JOIN CADASTRO_CLI_FOR CL(nolock)
					ON CL.NOME_CLIFOR = V.FILIAL
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.CHAVE_NFE =5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO 
					AND A.TAMANHO			= @TAMANHO 
					AND CL.UF				= @UF
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
		end
	
	if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					INNER JOIN LOJAS_VAREJO V(nolock)
						ON V.CODIGO_FILIAL = A.CODIGO_FILIAL 
					INNER JOIN CADASTRO_CLI_FOR CL(nolock)
						ON CL.NOME_CLIFOR = V.FILIAL
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO 
						AND CL.UF = @UF
						AND A.DATA_VENDA		<=@DATA_VENDA)
 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				INNER JOIN LOJAS_VAREJO V(nolock)
					ON V.CODIGO_FILIAL = A.CODIGO_FILIAL 
				INNER JOIN CADASTRO_CLI_FOR CL(nolock)
					ON CL.NOME_CLIFOR = V.FILIAL
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO 
					AND CL.UF				= @UF
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
		end
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					INNER JOIN LOJAS_VAREJO V(nolock)
						ON V.CODIGO_FILIAL = A.CODIGO_FILIAL 
					INNER JOIN CADASTRO_CLI_FOR CL(nolock)
						ON CL.NOME_CLIFOR = V.FILIAL
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO
						AND A.TAMANHO			= @TAMANHO
						AND A.DATA_VENDA		<=@DATA_VENDA)
 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				INNER JOIN LOJAS_VAREJO V(nolock)
					ON V.CODIGO_FILIAL = A.CODIGO_FILIAL 
				INNER JOIN CADASTRO_CLI_FOR CL(nolock)
					ON CL.NOME_CLIFOR = V.FILIAL
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO 
					AND A.TAMANHO			= @TAMANHO
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
		end
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM LOJA_VENDA_PRODUTO A(nolock)
					INNER JOIN LOJA_VENDA B(nolock)
						ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
					INNER JOIN LOJA_VENDA_PGTO C(nolock)
						ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
					INNER JOIN LOJAS_VAREJO V(nolock)
						ON V.CODIGO_FILIAL = A.CODIGO_FILIAL 
					INNER JOIN CADASTRO_CLI_FOR CL(nolock)
						ON CL.NOME_CLIFOR = V.FILIAL
					LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
						ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
					WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
						AND A.PRODUTO			= @PRODUTO 
						AND A.COR_PRODUTO		= @COR_PRODUTO 
						AND A.DATA_VENDA		<=@DATA_VENDA)
 
		begin
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = A.ITEM ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = ISNULL(C.NUMERO_FISCAL_VENDA ,C.NUMERO_CUPOM_FISCAL), 
					ECF_ORIGEM = ISNULL((SELECT TOP 1 ECF FROM LOJA_CONTROLE_FISCAL CF WITH(NOLOCK) WHERE CF.CODIGO_FILIAL =C.CODIGO_FILIAL AND CF.ID_EQUIPAMENTO = C.ID_EQUIPAMENTO ),C.TERMINAL),
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = ISNULL(ESPECIE.NUMERO_MODELO_FISCAL,'2D'),
					N.CHAVE_NFE
				FROM LOJA_VENDA_PRODUTO A(nolock)
				INNER JOIN LOJA_VENDA B(nolock)
					ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TICKET = B.TICKET AND A.DATA_VENDA = B.DATA_VENDA 
				INNER JOIN LOJA_VENDA_PGTO C(nolock)
					ON C.CODIGO_FILIAL = B.CODIGO_FILIAL AND C.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA AND C.TERMINAL = B.TERMINAL 
				INNER JOIN LOJAS_VAREJO V(nolock)
					ON V.CODIGO_FILIAL = A.CODIGO_FILIAL 
				INNER JOIN CADASTRO_CLI_FOR CL(nolock)
					ON CL.NOME_CLIFOR = V.FILIAL
				LEFT JOIN LOJA_NOTA_FISCAL N(nolock)
					ON N.NF_NUMERO = C.NUMERO_FISCAL_VENDA AND N.SERIE_NF = C.SERIE_NF_SAIDA AND N.CODIGO_FILIAL = C.CODIGO_FILIAL AND N.STATUS_NFE = 5
				LEFT JOIN SERIES_NF SERIE(nolock)
					ON SERIE.SERIE_NF = C.SERIE_NF_SAIDA 
				LEFT JOIN CTB_ESPECIE_SERIE ESPECIE (nolock)
					ON SERIE.ESPECIE_SERIE = ESPECIE.ESPECIE_SERIE 
				LEFT JOIN LOJA_VENDA_TROCA_ORIGEM E(nolock)
					ON E.CODIGO_FILIAL_ORIGEM = A.CODIGO_FILIAL AND E.TICKET_ORIGEM  = A.TICKET AND E.DATA_VENDA_ORIGEM = A.DATA_VENDA AND E.ITEM_ORIGEM = A.ITEM 
				WHERE E.CODIGO_FILIAL_ORIGEM IS NULL
					AND A.PRODUTO			= @PRODUTO 
					AND A.COR_PRODUTO		= @COR_PRODUTO 
					AND A.DATA_VENDA		<=@DATA_VENDA
				order by case when C.NUMERO_CUPOM_FISCAL is not null then 0 else 1 end , A.DATA_VENDA
		end
		if @ItemAtualizado = 0 AND 
			exists (SELECT A.TICKET 
					FROM SS_LOJA_TROCA_ORIGEM A(nolock)
					WHERE A.PRODUTO			= @PRODUTO 
						AND A.DATA_VENDA		<=@DATA_VENDA
						AND A.QTDE_VENDA - A.QTDE_TROCA > 0 )
 
		begin
			
			SELECT @Emissor_nfce = 0
			
			IF EXISTS (select CODIGO_FILIAL from LOJA_NOTA_FISCAL WHERE substring (CHAVE_NFE,21,2) = '65' AND codigo_filial = @CODIGO_FILIAL  AND STATUS_NFE = 5 ) /*#SS01#*/
			BEGIN
				SELECT @Emissor_nfce = 1
			END
			
			select @ItemAtualizado = 1, @NotaItemAtualizado= 1
			insert into LOJA_VENDA_TROCA_ORIGEM (CODIGO_FILIAL,TICKET,DATA_VENDA,ITEM,CODIGO_FILIAL_ORIGEM,TICKET_ORIGEM,DATA_VENDA_ORIGEM,ITEM_ORIGEM,DATA_PARA_TRANSFERENCIA,NUMERO_CUPOM_FISCAL_ORIGEM,ECF_ORIGEM,ATUALIZACAO_MANUAL,MODELO_FISCAL_ORIGEM,CHAVE_NFE_ORIGEM)
			SELECT	TOP 1
					CODIGO_FILIAL = @CODIGO_FILIAL,
					TICKET = @TICKET,
					DATA_VENDA =@DATA_VENDA ,
					ITEM = @ITEM,
					CODIGO_FILIAL_ORIGEM =A.CODIGO_FILIAL ,
					TICKET_ORIGEM = A.TICKET ,
					DATA_VENDA_ORIGEM = A.DATA_VENDA ,
					ITEM_ORIGEM = '0000' ,
					DATA_PARA_TRANSFERENCIA = GETDATE(),
					NUMERO_CUPOM_FISCAL_ORIGEM = a.numero_cupom_fiscal, 
					ECF_ORIGEM = A.ECF,
					ATUALIZACAO_MANUAL = 1,
					MODELO_FISCAL_ORIGEM = '2D',
					a.chave_nfe
				FROM SS_LOJA_TROCA_ORIGEM A(nolock)
				WHERE A.PRODUTO			= @PRODUTO 
					AND A.DATA_VENDA		<=@DATA_VENDA
					and a.QTDE_VENDA - a.QTDE_TROCA > 0 
					AND  ISNULL(SUBSTRING (CHAVE_NFE,21,2),CASE WHEN @EMISSOR_NFCE = 0  THEN  '55' ELSE '65' END) IN (CASE WHEN @Emissor_nfce = 0  THEN  '55' ELSE '65' END,'55') 
				ORDER BY CASE WHEN a.codigo_filial = @CODIGO_FILIAL THEN 0 ELSE 1 END , A.DATA_VENDA
		end
		
	end try
	begin catch
		PRINT 'Erro:'+ @CODIGO_FILIAL+ '-' + @TICKET+ '-'+@ITEM+ '-'+@PRODUTO+ '-'+@COR_PRODUTO+char(10)+ERROR_MESSAGE()
	end catch
	
end

/*Se encontrou atualiza a observação da nota fiscal com os dados do ticket origem*/
if @NotaItemAtualizado= 1
begin
	DECLARE CurDadosCupomOrigem CURSOR FOR 
	SELECT	OBS = 
				' Origem Prod:' + ltrim(rtrim(C.PRODUTO))+
				' COO/NFCe:' + ltrim(rtrim(D.NUMERO_CUPOM_FISCAL_ORIGEM))+
				' Data:'+ ltrim(rtrim(convert(varchar(12),D.DATA_VENDA_ORIGEM,103)))+
				' ECF:' + ltrim(rtrim(convert(varchar(3),D.ECF_ORIGEM)))+ CHAR(10)
			FROM LOJA_VENDA A(NOLOCK)
			INNER JOIN LOJA_VENDA_PGTO B(NOLOCK)
				ON A.CODIGO_FILIAL = B.CODIGO_FILIAL AND A.TERMINAL = B.TERMINAL AND A.LANCAMENTO_CAIXA = B.LANCAMENTO_CAIXA 
			INNER JOIN LOJA_VENDA_TROCA C(NOLOCK)
				ON A.TICKET = C.TICKET AND A.CODIGO_FILIAL = C.CODIGO_FILIAL AND A.DATA_VENDA = C.DATA_VENDA 
			INNER JOIN LOJA_VENDA_TROCA_ORIGEM D(NOLOCK)
				ON C.CODIGO_FILIAL = D.CODIGO_FILIAL AND C.TICKET = D.TICKET AND C.DATA_VENDA = D.DATA_VENDA AND C.ITEM =D.ITEM 
			INNER JOIN LOJA_NOTA_FISCAL E
				ON B.CODIGO_FILIAL = E.CODIGO_FILIAL AND B.NUMERO_FISCAL_TROCA = E.NF_NUMERO AND B.SERIE_NF_ENTRADA = E.SERIE_NF AND D.ECF_ORIGEM IS NOT NULL 
			where e.CHAVE_NFE =@prChaveNFe
			GROUP BY D.CHAVE_NFE_ORIGEM, E.CHAVE_NFE ,LTRIM(RTRIM(C.PRODUTO)),LTRIM(RTRIM(D.NUMERO_CUPOM_FISCAL_ORIGEM)),LTRIM(RTRIM(CONVERT(VARCHAR(12),D.DATA_VENDA_ORIGEM,103))),LTRIM(RTRIM(CONVERT(VARCHAR(3),D.ECF_ORIGEM)))
	OPEN CurDadosCupomOrigem
	FETCH NEXT FROM CurDadosCupomOrigem INTO @Obs
	WHILE @@FETCH_STATUS = 0
	BEGIN
		select @ObsTexto = @ObsTexto + @Obs
		FETCH NEXT FROM CurDadosCupomOrigem INTO @Obs
	END
	CLOSE CurDadosCupomOrigem
	DEALLOCATE CurDadosCupomOrigem
	
	update LOJA_NOTA_FISCAL set OBS = isnull(convert(varchar(max),OBS),'') + @ObsTexto where CHAVE_NFE =@prChaveNFe and obs not like '%Origem Prod:%'
end
		
set nocount off
end