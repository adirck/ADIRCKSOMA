IF ( SELECT COUNT(*) AS QTDE FROM INFORMATION_SCHEMA.COLUMNS C WHERE TABLE_NAME = 'CADASTRO_ITEM_FISCAL' AND COLUMN_NAME = 'INATIVO')=0
BEGIN 
	EXECUTE ( 'ALTER TABLE CADASTRO_ITEM_FISCAL ADD INATIVO BIT DEFAULT 0 NOT NULL ')
END  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'LOJA_NOTA_FISCAL' and column_name = 'SS_ID_MAQUINA')=0
begin 
	execute ( 'ALTER TABLE LOJA_NOTA_FISCAL ADD SS_ID_MAQUINA VARCHAR(200) ')
end  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'LOJA_NOTA_FISCAL' and column_name = 'SS_VERSAO_USERPROGRAMS')=0
begin 
	execute ( 'ALTER TABLE LOJA_NOTA_FISCAL ADD SS_VERSAO_USERPROGRAMS VARCHAR(200) ')
end  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'LOJA_ENTRADAS' and column_name = 'SS_ID_MAQUINA')=0
begin 
	execute ( 'ALTER TABLE LOJA_ENTRADAS ADD SS_ID_MAQUINA VARCHAR(200) ')
end  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'LOJA_ENTRADAS' and column_name = 'SS_VERSAO_USERPROGRAMS')=0
begin 
	execute ( 'ALTER TABLE LOJA_ENTRADAS ADD SS_VERSAO_USERPROGRAMS VARCHAR(200) ')
end  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'LOJA_SAIDAS' and column_name = 'SS_ID_MAQUINA')=0
begin 
	execute ( 'ALTER TABLE LOJA_SAIDAS ADD SS_ID_MAQUINA VARCHAR(200) ')
end  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'LOJA_SAIDAS' and column_name = 'SS_VERSAO_USERPROGRAMS')=0
begin 
	execute ( 'ALTER TABLE LOJA_SAIDAS ADD SS_VERSAO_USERPROGRAMS VARCHAR(200) ')
end  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'LOJA_VENDA' and column_name = 'SS_ID_MAQUINA')=0
begin 
	execute ( 'ALTER TABLE LOJA_VENDA ADD SS_ID_MAQUINA VARCHAR(200) ')
end  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'LOJA_VENDA' and column_name = 'SS_VERSAO_USERPROGRAMS')=0
begin 
	execute ( 'ALTER TABLE LOJA_VENDA ADD SS_VERSAO_USERPROGRAMS VARCHAR(200) ')
end  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'PARAMETROS_LOJA' and column_name = 'SS_RETORNO_SCRIPT')=0
begin 
	execute ( 'ALTER TABLE PARAMETROS_LOJA ADD SS_RETORNO_SCRIPT TEXT ')
end  

if (select count(*) as qtde from information_schema.columns c where table_name = 'PARAMETROS_LOJA' and column_name = 'SS_RETORNO_SCRIPT')=0
begin 
	execute ( 'ALTER TABLE PARAMETROS_LOJA ADD SS_RETORNO_SCRIPT TEXT ')
end  

if ( select count(*) as qtde from information_schema.columns c where table_name = 'LOJA_TERMINAIS' and column_name = 'DATA_RELATORIO_FECHAMENTO')=0
begin 
	execute ( 'alter table LOJA_TERMINAIS add DATA_RELATORIO_FECHAMENTO DATETIME NULL	')
end  

if not exists (select * from LOJA_TIPOS_ENTRADA_SAIDA where DESC_TIPO_ENTRADA_SAIDA ='DEVOLUCAO SAIDA')
	BEGIN
		INSERT INTO LOJA_TIPOS_ENTRADA_SAIDA  (TIPO_ENTRADA_SAIDA,DESC_TIPO_ENTRADA_SAIDA,INDICADOR_ENTRADA_SAIDA,DATA_PARA_TRANSFERENCIA)
		SELECT TIPO_ENTRADA_SAIDA = (SELECT RIGHT('00'+ CONVERT(VARCHAR(2),ISNULL(MAX(TIPO_ENTRADA_SAIDA),'0')+ 1),2) FROM LOJA_TIPOS_ENTRADA_SAIDA),
				DESC_TIPO_ENTRADA_SAIDA='DEVOLUCAO SAIDA',INDICADOR_ENTRADA_SAIDA='S',DATA_PARA_TRANSFERENCIA=GETDATE()
	END 

if not exists (select * from LOJA_TIPOS_ENTRADA_SAIDA where DESC_TIPO_ENTRADA_SAIDA ='TRANSFERENCIA SAIDA')
	BEGIN
		INSERT INTO LOJA_TIPOS_ENTRADA_SAIDA  (TIPO_ENTRADA_SAIDA,DESC_TIPO_ENTRADA_SAIDA,INDICADOR_ENTRADA_SAIDA,DATA_PARA_TRANSFERENCIA)
		SELECT TIPO_ENTRADA_SAIDA = (SELECT RIGHT('00'+ CONVERT(VARCHAR(2),ISNULL(MAX(TIPO_ENTRADA_SAIDA),'0')+ 1),2) FROM LOJA_TIPOS_ENTRADA_SAIDA) ,
				DESC_TIPO_ENTRADA_SAIDA='TRANSFERENCIA SAIDA',INDICADOR_ENTRADA_SAIDA='S',DATA_PARA_TRANSFERENCIA=GETDATE()
	END 



if not exists (select 1 from PARAMETROS where PARAMETRO ='SS_EXIBE_MENSAGEM')
	begin
		INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
								RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
								ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
								PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
			SELECT  'SS_EXIBE_MENSAGEM' AS PARAMETRO, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
					'0' AS VALOR_DEFAULT, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
					'0' AS VALOR_ATUAL, 
					'MSG DO CAMPO NOTA_PROGRAMADOR CASO O CLIENTE COMPRE NO MESMO DIA E FILIAL QUE FOI FEITO CADASTRO' AS DESC_PARAMETRO, 
					'C' AS TIPO_DADO, 
					'' AS RANGE_VALOR_ATUAL, 
					0 AS GLOBAL, 
					0 AS ESCOPO, 
					0 AS POR_USUARIO_OK, 
					GETDATE() AS DATA_PARA_TRANSFERENCIA, 
					'MENSAGEM PADRÃO!' AS NOTA_PROGRAMADOR, 
					1 AS ENVIA_PARA_LOJA, 
					1 AS PERMITE_POR_LOJA, 
					0 AS PERMITE_POR_TERMINAL, 
					0 AS PERMITE_ALTERAR_NA_LOJA, 
					0 AS PERMITE_ALTERAR_NO_TERMINAL, 
					0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
					0 AS PERMITE_POR_REPRESENTANTE, 
					0 AS ENVIA_PARA_REPRESENTANTE,
					0 AS PERMITE_POR_EMPRESA
	end

if not exists (select 1 from PARAMETROS where PARAMETRO ='PERMITE_ENTRADA_LINX')
	begin
		INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
								RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
								ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
								PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
			SELECT  'PERMITE_ENTRADA_LINX' AS PARAMETRO, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
					'.T.' AS VALOR_DEFAULT, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
					'.T.' AS VALOR_ATUAL, 
					'Permite entrada de notas pelo LinxPOS Manager' AS DESC_PARAMETRO, 
					'L' AS TIPO_DADO, 
					'' AS RANGE_VALOR_ATUAL, 
					0 AS GLOBAL, 
					0 AS ESCOPO, 
					0 AS POR_USUARIO_OK, 
					GETDATE() AS DATA_PARA_TRANSFERENCIA, 
					'Felipe SIlva (SS): Indica se é permitida entrada de notas fiscais pelo LinxPOS Manager.' AS NOTA_PROGRAMADOR, 
					1 AS ENVIA_PARA_LOJA, 
					1 AS PERMITE_POR_LOJA, 
					0 AS PERMITE_POR_TERMINAL, 
					0 AS PERMITE_ALTERAR_NA_LOJA, 
					0 AS PERMITE_ALTERAR_NO_TERMINAL, 
					0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
					0 AS PERMITE_POR_REPRESENTANTE, 
					0 AS ENVIA_PARA_REPRESENTANTE,
					0 AS PERMITE_POR_EMPRESA
	end

if not exists (select 1 from PARAMETROS where PARAMETRO ='SS1')
	begin 
			INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
								RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
								ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
								PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
			SELECT  'SS1' AS PARAMETRO, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
					'12:00' AS VALOR_DEFAULT, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
					'12:00' AS VALOR_ATUAL, 
					'HORA LIBERAÇÃO REDUÇÃO Z - Informa a partir de que horas é permitido tirar a redução Z.' AS DESC_PARAMETRO, 
					'C' AS TIPO_DADO, 
					'' AS RANGE_VALOR_ATUAL, 
					0 AS GLOBAL, 
					0 AS ESCOPO, 
					0 AS POR_USUARIO_OK, 
					GETDATE() AS DATA_PARA_TRANSFERENCIA, 
					'Leandro Rocha (SS): HORA LIBERAÇÃO REDUÇÃO Z - Parâmetro usado no exclusivo da tela de redução Z, só permite tirar redução Z se a data atual for superior a data do parâmetro.' AS NOTA_PROGRAMADOR, 
					1 AS ENVIA_PARA_LOJA, 
					1 AS PERMITE_POR_LOJA, 
					0 AS PERMITE_POR_TERMINAL, 
					0 AS PERMITE_ALTERAR_NA_LOJA, 
					0 AS PERMITE_ALTERAR_NO_TERMINAL, 
					0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
					0 AS PERMITE_POR_REPRESENTANTE, 
					0 AS ENVIA_PARA_REPRESENTANTE,
					0 AS PERMITE_POR_EMPRESA
	end
	
if not exists (select 1 from PARAMETROS where PARAMETRO ='SS2')
	begin	
		INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
							RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
							ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
							PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
		SELECT  'SS2' AS PARAMETRO, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
				'.T.' AS VALOR_DEFAULT, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
				'.F.' AS VALOR_ATUAL, 
				'REDUÇÃO Z APÓS FECHAMENTO - Só permite tirar a redução Z após emitido o fechamento de caixa.' AS DESC_PARAMETRO, 
				'L' AS TIPO_DADO, 
				'' AS RANGE_VALOR_ATUAL, 
				0 AS GLOBAL, 
				0 AS ESCOPO, 
				0 AS POR_USUARIO_OK, 
				GETDATE() AS DATA_PARA_TRANSFERENCIA, 
				'Leandro Rocha (SS): REDUÇÃO Z APÓS FECHAMENTO - Só permite tirar a redução Z após emitido o fechamento de caixa. Caso não tenha sido emitido o fechamento o processo de emissão da Redução Z será interrompido.' AS NOTA_PROGRAMADOR, 
				1 AS ENVIA_PARA_LOJA, 
				1 AS PERMITE_POR_LOJA, 
				0 AS PERMITE_POR_TERMINAL, 
				0 AS PERMITE_ALTERAR_NA_LOJA, 
				0 AS PERMITE_ALTERAR_NO_TERMINAL, 
				0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
				0 AS PERMITE_POR_REPRESENTANTE, 
				0 AS ENVIA_PARA_REPRESENTANTE,
				0 AS PERMITE_POR_EMPRESA
	end
			
if not exists (select 1 from PARAMETROS where PARAMETRO ='SS3')
	begin
			INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
								RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
								ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
								PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
			SELECT  'SS3' AS PARAMETRO, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
					'3' AS VALOR_DEFAULT, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
					'3' AS VALOR_ATUAL, 
					'DIAS PENDENCIA NFE - Quantos dias a NFE pode ficar pendente antes de bloquear a redução Z' AS DESC_PARAMETRO, 
					'C' AS TIPO_DADO, 
					'' AS RANGE_VALOR_ATUAL, 
					0 AS GLOBAL, 
					0 AS ESCOPO, 
					0 AS POR_USUARIO_OK, 
					GETDATE() AS DATA_PARA_TRANSFERENCIA, 
					'Leandro Rocha (SS): DIAS PENDENCIA NFE - Parâmetro usado no relatório de fechamento de caixa, só permite tirar redução Z se não tiver nota com emissão anterior a quantidade de dias do parâmetro. 
					As notas nessa condição também será destacadas como erro no relatório de fechamento. 
					Se estiver dentro do prazo será destacada como aviso no relatório de fechamento.' AS NOTA_PROGRAMADOR, 
					1 AS ENVIA_PARA_LOJA, 
					1 AS PERMITE_POR_LOJA, 
					0 AS PERMITE_POR_TERMINAL, 
					0 AS PERMITE_ALTERAR_NA_LOJA, 
					0 AS PERMITE_ALTERAR_NO_TERMINAL, 
					0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
					0 AS PERMITE_POR_REPRESENTANTE, 
					0 AS ENVIA_PARA_REPRESENTANTE,
					0 AS PERMITE_POR_EMPRESA
	end

if not exists (select 1 from PARAMETROS where PARAMETRO ='CONTROLA_TAB_PRECO_SAIDAS')
	begin	
	INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
							RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
							ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
							PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
		SELECT  'CONTROLA_TAB_PRECO_SAIDAS' AS PARAMETRO, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
				'.F.' AS VALOR_DEFAULT, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
				'.F.' AS VALOR_ATUAL, 
				'CONTROLA TABELA DE PREÇO DAS SAÍDAS, SE VERDADEIRO SÓ PERMITIRÁ TABELAS INDICADAS NO PARAMETRO' AS DESC_PARAMETRO, 
				'L' AS TIPO_DADO, 
				'' AS RANGE_VALOR_ATUAL, 
				0 AS GLOBAL, 
				0 AS ESCOPO, 
				0 AS POR_USUARIO_OK, 
				GETDATE() AS DATA_PARA_TRANSFERENCIA, 
				'TiaCarvalho (SS): Só permitirá gerar saídas conforme as tabelas definidas nos parâmetros que guarda a tabela de venda e transferência.' AS NOTA_PROGRAMADOR, 
				1 AS ENVIA_PARA_LOJA, 
				1 AS PERMITE_POR_LOJA, 
				0 AS PERMITE_POR_TERMINAL, 
				0 AS PERMITE_ALTERAR_NA_LOJA, 
				0 AS PERMITE_ALTERAR_NO_TERMINAL, 
				0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
				0 AS PERMITE_POR_REPRESENTANTE, 
				0 AS ENVIA_PARA_REPRESENTANTE,
				0 AS PERMITE_POR_EMPRESA
	end

if not exists (select 1 from PARAMETROS where PARAMETRO ='CODIGO_TAB_PRECO_TRANSF')
	begin
		INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
								RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
								ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
								PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
			SELECT  'CODIGO_TAB_PRECO_TRANSF' AS PARAMETRO, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
					'17' AS VALOR_DEFAULT, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
					'17' AS VALOR_ATUAL, 
					'Codida tabela de preço a ser utilizada nas saídas do estoque de transferencia entre filiais.' AS DESC_PARAMETRO, 
					'C' AS TIPO_DADO, 
					'' AS RANGE_VALOR_ATUAL, 
					0 AS GLOBAL, 
					0 AS ESCOPO, 
					0 AS POR_USUARIO_OK, 
					GETDATE() AS DATA_PARA_TRANSFERENCIA, 
					'TiaCarvalho  (SS):Codida tabela de preço a ser utilizada nas saídas do estoque de transferencia entre filiais. ' AS NOTA_PROGRAMADOR, 
					1 AS ENVIA_PARA_LOJA, 
					1 AS PERMITE_POR_LOJA, 
					0 AS PERMITE_POR_TERMINAL, 
					0 AS PERMITE_ALTERAR_NA_LOJA, 
					0 AS PERMITE_ALTERAR_NO_TERMINAL, 
					0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
					0 AS PERMITE_POR_REPRESENTANTE, 
					0 AS ENVIA_PARA_REPRESENTANTE,
					0 AS PERMITE_POR_EMPRESA
	end
	
if not exists (select 1 from PARAMETROS where PARAMETRO ='CODIGO_TAB_PRECO_VENDA')
	begin
		INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
								RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
								ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
								PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
			SELECT  'CODIGO_TAB_PRECO_VENDA' AS PARAMETRO, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
					'VE' AS VALOR_DEFAULT, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
					'VE' AS VALOR_ATUAL, 
					'Codida tabela de preço a ser utilizada nas saídas do estoque de venda entre filiais.' AS DESC_PARAMETRO, 
					'C' AS TIPO_DADO, 
					'' AS RANGE_VALOR_ATUAL, 
					0 AS GLOBAL, 
					0 AS ESCOPO, 
					0 AS POR_USUARIO_OK, 
					GETDATE() AS DATA_PARA_TRANSFERENCIA, 
					'TiaCarvalho  (SS):Codida tabela de preço a ser utilizada nas saídas do estoque de venda entre filiais. ' AS NOTA_PROGRAMADOR, 
					1 AS ENVIA_PARA_LOJA, 
					1 AS PERMITE_POR_LOJA, 
					0 AS PERMITE_POR_TERMINAL, 
					0 AS PERMITE_ALTERAR_NA_LOJA, 
					0 AS PERMITE_ALTERAR_NO_TERMINAL, 
					0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
					0 AS PERMITE_POR_REPRESENTANTE, 
					0 AS ENVIA_PARA_REPRESENTANTE,
					0 AS PERMITE_POR_EMPRESA
	end
	
if not exists (select 1 from PARAMETROS where PARAMETRO ='CONTROLA_SERIES_NF_LOJAS')
	begin	
	INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
							RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
							ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
							PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
		SELECT  'CONTROLA_SERIES_NF_LOJAS' AS PARAMETRO, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
				'.F.' AS VALOR_DEFAULT, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
				'.F.' AS VALOR_ATUAL, 
				'PARAMETRO QUE INDICA SE CONTROLA AS SERIES A SEREM UTILIZADAS NAS LOJAS.' AS DESC_PARAMETRO, 
				'L' AS TIPO_DADO, 
				'' AS RANGE_VALOR_ATUAL, 
				0 AS GLOBAL, 
				0 AS ESCOPO, 
				0 AS POR_USUARIO_OK, 
				GETDATE() AS DATA_PARA_TRANSFERENCIA, 
				'TiaCarvalho (SS): Só permitirá gerar Saidas/Notas Fiscais Com as Séries Liberadas no Parametro.' AS NOTA_PROGRAMADOR, 
				1 AS ENVIA_PARA_LOJA, 
				1 AS PERMITE_POR_LOJA, 
				0 AS PERMITE_POR_TERMINAL, 
				0 AS PERMITE_ALTERAR_NA_LOJA, 
				0 AS PERMITE_ALTERAR_NO_TERMINAL, 
				0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
				0 AS PERMITE_POR_REPRESENTANTE, 
				0 AS ENVIA_PARA_REPRESENTANTE,
				0 AS PERMITE_POR_EMPRESA
	end

if not exists (select 1 from PARAMETROS where PARAMETRO ='SERIES_NF_LOJAS')
	begin
		INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
								RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
								ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
								PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
			SELECT  'SERIES_NF_LOJAS' AS PARAMETRO, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
					'5' AS VALOR_DEFAULT, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
					'5' AS VALOR_ATUAL, 
					'Séries de nota fiscal liberadas para a Loja.' AS DESC_PARAMETRO, 
					'C' AS TIPO_DADO, 
					'' AS RANGE_VALOR_ATUAL, 
					0 AS GLOBAL, 
					0 AS ESCOPO, 
					0 AS POR_USUARIO_OK, 
					GETDATE() AS DATA_PARA_TRANSFERENCIA, 
					'TiaCarvalho  (SS):Guarda as séries de nota fiscal liberadas para serem utilizadas pela loja. ' AS NOTA_PROGRAMADOR, 
					1 AS ENVIA_PARA_LOJA, 
					1 AS PERMITE_POR_LOJA, 
					0 AS PERMITE_POR_TERMINAL, 
					0 AS PERMITE_ALTERAR_NA_LOJA, 
					0 AS PERMITE_ALTERAR_NO_TERMINAL, 
					0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
					0 AS PERMITE_POR_REPRESENTANTE, 
					0 AS ENVIA_PARA_REPRESENTANTE,
					0 AS PERMITE_POR_EMPRESA
	end

if not exists (select 1 from PARAMETROS where PARAMETRO ='CONTROLA_ORIGEM_TROCA')
	begin	
		INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
							RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
							ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
							PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
		SELECT  'CONTROLA_ORIGEM_TROCA' AS PARAMETRO, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
				'.T.' AS VALOR_DEFAULT, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
				'.F.' AS VALOR_ATUAL, 
				'PARAMETRO QUE INDICA SE CONTROLA OS TICKETs DE ORIGEM DOS ITENS NA TROCA.' AS DESC_PARAMETRO, 
				'L' AS TIPO_DADO, 
				'' AS RANGE_VALOR_ATUAL, 
				0 AS GLOBAL, 
				0 AS ESCOPO, 
				0 AS POR_USUARIO_OK, 
				GETDATE() AS DATA_PARA_TRANSFERENCIA, 
				'TiaCarvalho (SS): Só permitirá gerar trocar itens se informar o ticket/data_venda e filial_origem do item a ser trocado.' AS NOTA_PROGRAMADOR, 
				1 AS ENVIA_PARA_LOJA, 
				1 AS PERMITE_POR_LOJA, 
				0 AS PERMITE_POR_TERMINAL, 
				0 AS PERMITE_ALTERAR_NA_LOJA, 
				0 AS PERMITE_ALTERAR_NO_TERMINAL, 
				0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
				0 AS PERMITE_POR_REPRESENTANTE, 
				0 AS ENVIA_PARA_REPRESENTANTE,
				0 AS PERMITE_POR_EMPRESA
	end


if not exists (select 1 from PARAMETROS where PARAMETRO ='PERMITE_TROCA_UF_DIF')
	begin	
	INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
							RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
							ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
							PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
		SELECT  'PERMITE_TROCA_UF_DIF' AS PARAMETRO, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
				'.T.' AS VALOR_DEFAULT, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
				'.T.' AS VALOR_ATUAL, 
				'PARAMETRO QUE INDICA SE PERMITE TROCA ENTRE UF DIFERENTES.' AS DESC_PARAMETRO, 
				'L' AS TIPO_DADO, 
				'' AS RANGE_VALOR_ATUAL, 
				0 AS GLOBAL, 
				0 AS ESCOPO, 
				0 AS POR_USUARIO_OK, 
				GETDATE() AS DATA_PARA_TRANSFERENCIA, 
				'TiaCarvalho (SS): Só permitirá trocas entre ufs diferentes de o valor do parametro for verdadeiro.' AS NOTA_PROGRAMADOR, 
				1 AS ENVIA_PARA_LOJA, 
				1 AS PERMITE_POR_LOJA, 
				0 AS PERMITE_POR_TERMINAL, 
				0 AS PERMITE_ALTERAR_NA_LOJA, 
				0 AS PERMITE_ALTERAR_NO_TERMINAL, 
				0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
				0 AS PERMITE_POR_REPRESENTANTE, 
				0 AS ENVIA_PARA_REPRESENTANTE,
				0 AS PERMITE_POR_EMPRESA
	end

/*Controla Saldo Devolução POS*/
if not exists (select 1 from PARAMETROS where PARAMETRO ='CONTROLA_SALDO_DEV_SAIDA')
	begin	
	INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
							RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
							ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
							PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
		SELECT  'CONTROLA_SALDO_DEV_SAIDA' AS PARAMETRO, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
				'.T.' AS VALOR_DEFAULT, 
				CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
				'.F.' AS VALOR_ATUAL, 
				'PARAMETRO QUE INDICA SE VAI CONTROLAR AUTOMATICAMENTE O SALDO DA SAIDA DE DEVOLUÇÃO.' AS DESC_PARAMETRO, 
				'L' AS TIPO_DADO, 
				'' AS RANGE_VALOR_ATUAL, 
				0 AS GLOBAL, 
				0 AS ESCOPO, 
				0 AS POR_USUARIO_OK, 
				GETDATE() AS DATA_PARA_TRANSFERENCIA, 
				'TiaCarvalho (SS): Indica Se irá controlar o Saldo das Saídas para Devolução entre matriz contábil diferente.' AS NOTA_PROGRAMADOR, 
				1 AS ENVIA_PARA_LOJA, 
				1 AS PERMITE_POR_LOJA, 
				0 AS PERMITE_POR_TERMINAL, 
				0 AS PERMITE_ALTERAR_NA_LOJA, 
				0 AS PERMITE_ALTERAR_NO_TERMINAL, 
				0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
				0 AS PERMITE_POR_REPRESENTANTE, 
				0 AS ENVIA_PARA_REPRESENTANTE,
				0 AS PERMITE_POR_EMPRESA
	end
if not exists (select 1 from PARAMETROS where PARAMETRO ='SS_LOG_SCRIPT')
	begin	
		INSERT INTO PARAMETROS (PARAMETRO, PENULT_ATUALIZACAO, VALOR_DEFAULT, ULT_ATUALIZACAO, VALOR_ATUAL, DESC_PARAMETRO, TIPO_DADO, 
									RANGE_VALOR_ATUAL, GLOBAL, ESCOPO, POR_USUARIO_OK, DATA_PARA_TRANSFERENCIA, NOTA_PROGRAMADOR, 
									ENVIA_PARA_LOJA, PERMITE_POR_LOJA, PERMITE_POR_TERMINAL, PERMITE_ALTERAR_NA_LOJA, PERMITE_ALTERAR_NO_TERMINAL,
									PERMITE_ALTERAR_NO_REPRESENTANTE, PERMITE_POR_REPRESENTANTE, ENVIA_PARA_REPRESENTANTE, PERMITE_POR_EMPRESA)
			SELECT  'SS_LOG_SCRIPT' AS PARAMETRO, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS PENULT_ATUALIZACAO, 
					'.T.' AS VALOR_DEFAULT, 
					CONVERT(VARCHAR(10), GETDATE(), 112) AS ULT_ATUALIZACAO, 
					'.T.' AS VALOR_ATUAL, 
					'SS - LOG DE ERRO DE SCRIPTS EXECUTADOS' AS DESC_PARAMETRO, 
					'L' AS TIPO_DADO, 
					'' AS RANGE_VALOR_ATUAL, 
					0 AS GLOBAL, 
					0 AS ESCOPO, 
					0 AS POR_USUARIO_OK, 
					GETDATE() AS DATA_PARA_TRANSFERENCIA, 
					'FELIPE CARVALHO (SS) - LOG DE ERRO DE SCRIPTS EXECUTADOS ' AS NOTA_PROGRAMADOR, 
					1 AS ENVIA_PARA_LOJA, 
					1 AS PERMITE_POR_LOJA, 
					0 AS PERMITE_POR_TERMINAL, 
					0 AS PERMITE_ALTERAR_NA_LOJA, 
					0 AS PERMITE_ALTERAR_NO_TERMINAL, 
					0 AS PERMITE_ALTERAR_NO_REPRESENTANTE, 
					0 AS PERMITE_POR_REPRESENTANTE, 
					0 AS ENVIA_PARA_REPRESENTANTE,
					0 AS PERMITE_POR_EMPRESA
	END				
	
if not exists (select 1 from PARAMETROS_LOJA where PARAMETRO ='SS_LOG_SCRIPT' AND CODIGO_FILIAL IN (SELECT TOP 1 CODIGO_FILIAL FROM LOJA_VENDA GROUP BY CODIGO_FILIAL ORDER BY MAX(DATA_VENDA)))
	begin		
		INSERT INTO PARAMETROS_LOJA (PARAMETRO
									,CODIGO_FILIAL
									,VALOR_ATUAL
									,PERMITE_ALTERAR_NA_LOJA
									,DATA_PARA_TRANSFERENCIA
									,LX_STATUS_PARAMETRO
									,SS_RETORNO_SCRIPT)
					SELECT TOP 1 'SS_LOG_SCRIPT' AS PARAMETRO, 
							CODIGO_FILIAL ,
							'.T.' AS VALOR_ATUAL, 
							0 AS PERMITE_ALTERAR_NA_LOJA,
							GETDATE() AS DATA_PARA_TRANSFERENCIA, 
							0 AS LX_STATUS_PARAMETRO, 
							'' AS SS_RETORNO_SCRIPT	
							FROM LOJA_VENDA GROUP BY CODIGO_FILIAL ORDER BY MAX(DATA_VENDA)
	END							
